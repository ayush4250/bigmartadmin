{"version":3,"sources":["Firebase.js","Component/BannerSlider.js","Component/ProductView.js","Component/StripAdView.js","Component/HorizontalScroller.js","Fragments/HomeFragment.js","Actions/loadCategories.js","Actions/loadCategoryPage.js","Table/TableFragment.js","Fragments/ContactFragment.js","Whatsapp/SidebarChat.js","Whatsapp/Sidebar.js","Whatsapp/Chat.js","Whatsapp/ChatFragment.js","Pages/Dashboard.js","App.js","reportWebVitals.js","Reducers/categoryPageReducer.js","Reducers/categoryReducer.js","Reducers/rootReducer.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storageRef","storage","ref","AutoPlaySwipeableViews","autoPlay","SwipeableViews","BannerSlider","props","React","useState","activeStep","setActiveStep","theme","useTheme","axis","direction","index","onChangeIndex","step","enableMouseEvents","Images","map","style","width","height","objectFit","backgroundColor","background","Math","abs","src","banner","alt","ProductView","Box","p","bgcolor","boxShadow","mx","borderRadius","item","image","grey","Typography","variant","title","price","StripAdView","HorizontalScroller","display","overflow","products","Transition","forwardRef","Slide","HomeFragment","handleChange","event","newValue","setState","value","onFieldChange","e","target","name","save","state","viewtype","images","length","positionError","urls","console","log","loading","uploadImages","data","no_of_banners","parseInt","position","x","colors","collection","doc","Page","set","then","section","categoryPages","push","sort","a","b","addDialog","selecteProducts","layout_title","layout_background","onComplete","catch","err","urls2","strip_ad_banner","addSection","layout_titlen","layout_titleError","selectedProducts","snackbar","uploadProductSelection","removeImage","splice","layout_bg","loadLatestProducts","orderBy","limit","get","querySnapshot","productlist","empty","forEach","id","product_image_1","product_title","product_price","searching","error","searchProducts","search","keywords","split","where","onCompleted","file","ts","String","Date","getTime","i","out","Number","substr","toString","filename","uploadTask","child","put","on","snapshot","progress","bytesTransferred","totalBytes","getDownloadURL","downloadURL","uploadAgain","deleteImage","splited_link","replace","delete","deleteAgain","this","categories","loadCategories","loadPage","Container","maxwidth","fixed","AppBar","Tabs","onChange","indicatorColor","textColor","scrollButtons","aria-label","category","Tab","icon","categoryName","onclick","toUpperCase","view_type","banners","no_of_products","description","Fab","color","onClick","bottom","right","Dialog","fullScreen","open","onClose","TransitionComponent","Toolbar","IconButton","edge","Close","Button","autoFocus","FormControl","InputLabel","Select","labelId","defaultValue","MenuItem","TextField","label","type","size","helperText","margin","flexWrap","URL","createObjectURL","hidden","arial-label","Delete","htmlFor","arial-lebel","component","accept","files","placeholder","onChnag","flexGrow","justifyContent","bgColor","CircularProgress","undefined","FormControlLabel","control","Checkbox","checked","posi","indexOf","labelPlacement","Component","CategoryTab","Avatar","connect","dispatch","payload","getState","pagedata","loadCategoryPage","tableIcons","Add","Check","Clear","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","TableFragment","tatget","renderImageUrl","uploadImage","startsWith","columns","field","editComponent","render","rowData","editable","icons","onRowAdd","newData","Promise","resolve","reject","url","addCategory","onRowUpdate","oldData","updateCategory","success","onRowDelete","deleteCategory","addCategories","update","updateCategories","ContactFragment","SidebarChat","className","Sidebar","room","setroom","roomName","prompt","Chat","messages","input","setInput","sendMessage","preventDefault","message","received","timestamp","App","useStyles","makeStyles","root","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","content","padding","spacing","Dashboard","classes","fragment","setfragment","CssBaseline","noWrap","Drawer","paper","List","ListItem","button","ListItemIcon","Home","ListItemText","primary","Category","Phonelink","Settings","PowerOff","loadFragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","categoryPageReducer","action","newState","categoryReducer","list","filter","list1","index1","rootReducer","combineReducers","DEFAULT","initstate","key","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c2fbd563.chunk.js","sourcesContent":["\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport firebase from 'firebase/app';\r\n//import 'firebase/database'; // If using Firebase database\r\nimport 'firebase/storage';  // If using Firebase storage\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDncL-zRq5RaEmAGW6GFJPrqCLP8fg1X1c\",\r\n  authDomain: \"bigmart-2ef58.firebaseapp.com\",\r\n  databaseURL: \"https://bigmart-2ef58.firebaseio.com\",\r\n  projectId: \"bigmart-2ef58\",\r\n  storageBucket: \"bigmart-2ef58.appspot.com\",\r\n  messagingSenderId: \"33984927425\",\r\n  appId: \"1:33984927425:web:0256701f37c07c3c65e640\",\r\n  measurementId: \"G-NDMTF0Y3RP\"\r\n};\r\n\r\n//firebase.initializeApp(firebaseConfig);\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n const firestore=firebaseApp.firestore();\r\n export const storageRef = firebaseApp.storage().ref();\r\n// const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport default firestore;\r\n\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { autoPlay } from 'react-swipeable-views-utils';\r\nimport { blueGrey } from '@material-ui/core/colors';\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst BannerSlider = (props) => {\r\n    const[activeStep,setActiveStep] = React.useState(0);\r\n    const theme = useTheme();\r\n\r\n    const handleStepChange = (step) => {\r\n        setActiveStep(step);\r\n      };\r\n    \r\n      return (\r\n        <div>\r\n        \r\n          <AutoPlaySwipeableViews\r\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n            index={activeStep}\r\n            onChangeIndex={handleStepChange}\r\n            enableMouseEvents\r\n          >\r\n            {props.Images.map((step, index) => (\r\n              <div key={index} style={{width:\"100%\",height:\"250px\", objectFit:\"scale-down\",backgroundColor:step.background}} >\r\n                {Math.abs(activeStep - index) <= 2 ? (\r\n                  <img src={step.banner} \r\n                  style={{width:\"100%\"}} \r\n                  alt=\"\" />\r\n                ) : null}\r\n              </div>\r\n            ))}\r\n          </AutoPlaySwipeableViews>\r\n          \r\n        </div>\r\n      );\r\n}\r\n\r\nexport default BannerSlider;\r\n\r\n\r\n","import React from 'react'\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nconst ProductView = (props) => {\r\n    return (\r\n        <Box p=\"18px\" bgcolor=\"white\" boxShadow=\"8px\" mx=\"4px\" borderRadius=\"16px\">\r\n            <img src={props.item.image} style={{height:\"120px\", objectFit:\"scale-down\", width:\"120px\", backgroundColor:grey[50]}} />\r\n        \r\n        <Typography variant=\"subtitle1\">{props.item.title}</Typography>\r\n        <Typography variant=\"h6\">Rs. {props.item.price} </Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ProductView;\r\n","import React from 'react'\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst StripAdView = ({image,background}) => {\r\n    return (\r\n        <Box bgcolor=\"black\">\r\n            <img style={{height:'100px',width:'100%', background:background}} src={image}/>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default StripAdView;\r\n","import React from 'react'\r\nimport { Box, Typography } from '@material-ui/core'\r\nimport ProductView from './ProductView'\r\n\r\nconst HorizontalScroller = props => {\r\n    return (\r\n        <Box style={{background:props.background}} p=\"8px\">\r\n            <Typography variant=\"h5\">{props.title}</Typography>\r\n                <Box display=\"flex\" overflow=\"auto\">\r\n\r\n                    {props.products.map((item,index)=>\r\n                    <ProductView item={item} />\r\n                    )}\r\n             </Box>\r\n         </Box>\r\n    )\r\n} \r\n\r\nexport default HorizontalScroller;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadCategories } from '../Actions/loadCategories';\r\nimport { loadCategoryPage } from '../Actions/loadCategoryPage';\r\nimport \r\n{ Container, \r\n  Avatar,\r\n  Backdrop, \r\n  CircularProgress,\r\n  Slide,\r\n  IconButton, \r\n  Button, \r\n  Fab, \r\n  Dialog, \r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem, \r\n  Toolbar, \r\n  TextField, \r\n  Checkbox, \r\n  Snackbar, \r\n  FormControlLabel} \r\n  from '@material-ui/core';\r\n  import AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport BannerSlider from '../Component/BannerSlider';\r\nimport ProductView from '../Component/ProductView';\r\nimport StripAdView from '../Component/StripAdView';\r\nimport HorizontalScroller from '../Component/HorizontalScroller';\r\nimport firestore, { storageRef } from '../Firebase';\r\nimport {  Close, Delete } from '@material-ui/icons';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  }); \r\n\r\nexport class HomeFragment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            loading: true,\r\n            value: 0,\r\n            Page: \"Home\",\r\n            addDialog: false,\r\n            images: [],\r\n            colors: [],\r\n            viewtype: 0,\r\n            selectedProducts: [],\r\n            positionError:\"\",\r\n            layout_titleError: \"\",\r\n            snackbar: \"\",\r\n            layout_bg:\"#ffffff\"\r\n             \r\n        }\r\n    }\r\n\r\n   \r\n\r\n    componentDidMount(){\r\n        if(this.props.categories === null){\r\n           \r\n             this.props.loadCategories();\r\n           \r\n        }\r\n        if(this.props.categoryPages === null){\r\n            this.props.loadPage(\"Home\");\r\n        }\r\n\r\n        if(this.props.categoryPages !== null){\r\n          this.setState({\r\n            loading:false,\r\n          })\r\n        }\r\n     }\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.setState({\r\n            value:newValue,\r\n        })\r\n      };\r\n    \r\n    onFieldChange = e=>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value,\r\n        })\r\n    }\r\n\r\n    save = () =>{\r\n     \r\n        // if(this.state.position){\r\n        //   this.setState({\r\n        //     positionError: \"\",\r\n        //     layout_titleError: \"\",\r\n        //   })\r\n\r\n        //   return;\r\n        // }\r\n        switch(this.state.viewtype){\r\n         \r\n          case 0:\r\n            if(this.state.images.length<2){\r\n              this.setState({\r\n                positionError: \"Minimum 2 Images Required\"\r\n              })\r\n              return;\r\n            }\r\n\r\n            let index = 0;\r\n            let urls = [];\r\n            console.log(\"working\");\r\n            this.setState({\r\n              loading:true\r\n            })\r\n            this.uploadImages(this.state.images,index,urls,()=>{\r\n              let data ={\r\n                viewtype:0,\r\n                no_of_banners:urls.length,\r\n                index: parseInt(this.state.position),\r\n              }\r\n              for(let x=0;x<urls.length;x++){\r\n                data[\"banner\"+(x+1)] = urls[x]\r\n                data['banner'+(x+1)+\"_background\"] = this.state.colors[x]\r\n              }\r\n              const onComplete = ()=>{\r\n                let section = this.props.categoryPages[this.state.Page]\r\n                section.push(data)\r\n                section.sort((a,b)=>a.index-b.index);\r\n    \r\n                //this.props.addSection(this.state.Page,section);\r\n               \r\n                \r\n                this.setState({\r\n                  position:[],\r\n                  image:[],\r\n                  viewtype:0,\r\n                  colors:[],\r\n                  loading: false,\r\n                  addDialog: false,\r\n                  selecteProducts:[],\r\n                  layout_title:null,\r\n                  layout_background: null,\r\n                })\r\n              }\r\n              firestore.collection(\"Categories\").doc(this.state.Page).collection(\"TOP_DEALS\")\r\n              .doc().set(data)\r\n              .then(function(){\r\n                onComplete()\r\n                \r\n                \r\n    \r\n              }).catch(err=>{\r\n                this.setState({\r\n                  loading:false\r\n                })\r\n              })\r\n            })\r\n\r\n            break;\r\n            case 1:\r\n              if(this.state.images.length<1){\r\n                this.setState({\r\n                  positionError: \"Image is Required\"\r\n                })\r\n                return;\r\n              }\r\n\r\n              let index2 = 0;\r\n              let urls2 = []\r\n              this.setState({\r\n                loading:true\r\n              })\r\n              this.uploadImages([this.state.images[0]],index2,urls2,()=>{\r\n                let data ={\r\n                  viewtype:1,\r\n                  strip_ad_banner:urls2[0],\r\n                  index: parseInt(this.state.position),\r\n                  background:this.state.colors[0]\r\n                }\r\n                \r\n                const onComplete = ()=>{\r\n                  let section = this.props.categoryPages[this.state.Page]\r\n                  section.push(data)\r\n                  section.sort((a,b)=>a.index-b.index);\r\n                  \r\n                  this.props.addSection(this.state.Page,section);\r\n                  \r\n                  this.setState({\r\n                    position:[],\r\n                    image:[],\r\n                    viewtype:0,\r\n                    colors:[],\r\n                    loading: false,\r\n                    addDialog: false,\r\n                    selecteProducts:[],\r\n                    layout_titlen:null,\r\n                    layout_background: null,\r\n                  })\r\n                }\r\n                firestore.collection(\"Categories\").doc(this.state.Page).collection(\"TOP_DEALS\")\r\n                .doc().set(data)\r\n                .then(function(){\r\n                  onComplete()\r\n                  \r\n                  \r\n      \r\n                }).catch(err=>{\r\n                  this.setState({\r\n                    loading:false\r\n                  })\r\n                })\r\n              })\r\n              \r\n              break;\r\n            case 2:\r\n              if(!this.state.layout_title){\r\n                this.setState({\r\n                  layout_titleError: \"Required\"\r\n                })\r\n                return;\r\n               }\r\n               \r\n              if(this.state.selectedProducts.length < 1){\r\n                this.setState({\r\n                  snackbar: \"Please select at least 1 product\"\r\n                })\r\n                return;\r\n               }\r\n\r\n              this.uploadProductSelection()\r\n              break;\r\n              default:\r\n\r\n\r\n        }\r\n\r\n      }\r\n\r\n    removeImage = index =>{\r\n        let images = this.state.images\r\n        let colors = this.state.colors\r\n\r\n        images.splice(index, 1);\r\n        colors.splice(index, 1);\r\n\r\n        this.setState({\r\n          images,\r\n          colors,\r\n        })\r\n      }\r\n\r\n    uploadProductSelection = () =>{\r\n        this.setState({\r\n          loading: true,\r\n        })\r\n\r\n        let data ={\r\n          viewtype:this.state.viewtype,\r\n          layout_title:this.state.layout_title,\r\n          index: parseInt(this.state.position),\r\n          layout_background:this.state.layout_bg,\r\n          products:this.state.selectedProducts,\r\n        }\r\n        \r\n        const onComplete = ()=>{\r\n          let section = this.props.categoryPages[this.state.Page]\r\n          section.push(data)\r\n          section.sort((a,b)=>a.index-b.index);\r\n\r\n          //this.props.addSection(this.state.Page,section);\r\n         \r\n          \r\n          this.setState({\r\n            position:null,\r\n            image:[],\r\n            viewtype:0,\r\n            colors:[],\r\n            loading: false,\r\n            addDialog: false\r\n          })\r\n        }\r\n        firestore.collection(\"Categories\").doc(this.state.Page).collection(\"Top_Deals\")\r\n        .doc().set(data)\r\n        .then(function(){\r\n          onComplete()\r\n          \r\n          \r\n\r\n        }).catch(err=>{\r\n          this.setState({\r\n            loading:false\r\n          })\r\n        })\r\n\r\n      }\r\n\r\n    loadLatestProducts =() =>{\r\n        firestore\r\n        .collection(\"Products\")\r\n        .orderBy('added_on','desc').limit(8)\r\n        .get()\r\n        .then((querySnapshot) =>{\r\n            let productlist=[];\r\n               if(!querySnapshot.empty) {\r\n              \r\n               \r\n                   querySnapshot.forEach((doc) =>{\r\n                  \r\n                     let data = {\r\n                        id: doc.id,\r\n                       image: doc.data().product_image_1,\r\n                       title: doc.data().product_title,\r\n                       price: doc.data().product_price\r\n\r\n                     }\r\n                     productlist.push(data);\r\n                     console.log(data);\r\n                   })\r\n                }\r\n              this.setState({\r\n                productlist,\r\n                searching:false\r\n              })\r\n\r\n            }\r\n        ).catch((error)=>{\r\n            console.log(error);\r\n           \r\n        })\r\n\r\n      }\r\n\r\n    searchProducts =() =>{\r\n\r\n        if(!this.state.search) {\r\n          this.loadLatestProducts();\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          searching: true\r\n        })\r\n\r\n        let keywords = this.state.search.split(\" \");\r\n\r\n        firestore\r\n        .collection(\"Products\")\r\n        .where('tags','array-contains-any' , keywords)\r\n        .get()\r\n        .then((querySnapshot) =>{\r\n          let productlist=[];\r\n\r\n               if(!querySnapshot.empty) {\r\n                   querySnapshot.forEach((doc) =>{\r\n                     let data = {\r\n                       id: doc.id,\r\n                       image: doc.data().product_image_1,\r\n                       title: doc.data().product_title,\r\n                       price: doc.data().product_price\r\n                     }\r\n                     productlist.push(data);\r\n                   })\r\n                }\r\n              this.setState({\r\n                productlist,\r\n                searching: false\r\n              })\r\n\r\n            }\r\n        ).catch((error)=>{\r\n            console.log(error);\r\n          \r\n        })\r\n\r\n      }\r\n\r\n      uploadImages = (images,index,urls,onCompleted) =>{\r\n        const uploadAgain = (images,index,urls,onCompleted)=>this.uploadImages(images,index,urls,onCompleted);\r\n\r\n        let file = this.state.images[index];\r\n\r\n       \r\n          var ts= String(new Date().getTime()),\r\n          i=0,\r\n          out='';\r\n          for(i=0;i<ts.length;i+=2){\r\n            out += Number(ts.substr(i,2)).toString(36);\r\n          }\r\n          let filename = 'banner' + out;\r\n        \r\n\r\n        var uploadTask = storageRef.child('banners/'+filename+'.jpg').put(file);\r\n\r\n        // Register three observers:\r\n        // 1. 'state_changed' observer, called any time the state changes\r\n        // 2. Error observer, called on failure\r\n        // 3. Completion observer, called on successful completion\r\n        uploadTask.on('state_changed', function(snapshot){\r\n          // Observe state change events such as progress, pause, and resume\r\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n          var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          console.log('Upload is ' + progress + '% done');\r\n         {/* switch (snapshot.state) {\r\n            case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n              console.log('Upload is paused');\r\n              break;\r\n            case firebase.storage.TaskState.RUNNING: // or 'running'\r\n              console.log('Upload is running');\r\n              break;\r\n          } */}\r\n        }, function(error) {\r\n          // Handle unsuccessful uploads\r\n        }, function() {\r\n          \r\n          // Handle successful uploads on complete\r\n          // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n          uploadTask.snapshot.ref.getDownloadURL().then((downloadURL)=>{\r\n            urls.push(downloadURL);\r\n            index++;\r\n            if(index < images.length){\r\n              uploadAgain(images,index,urls,onCompleted)\r\n            }else{\r\n              onCompleted();\r\n            }\r\n          });\r\n        });\r\n      };\r\n\r\n      deleteImage = (images,index,onComplete) =>{\r\n\t\t   \r\n        const deleteAgain = (images,index,onComplete)=>\r\n        this.deleteImage(images,index,onComplete);\r\n    \r\n        let splited_link = images[index].split(\"/\");\r\n        let name = splited_link[splited_link.length -1]\r\n        .split(\"?\")[0]\r\n        .replace(\"banners%2F\", \"\");\r\n    \r\n        storageRef\r\n        .child(\"banners/\" + name)\r\n        .delete()\r\n        .then(()=>{\r\n          index++;\r\n          if(index < images.length){\r\n            deleteAgain(images,index,onComplete);\r\n          }else{\r\n            onComplete();\r\n          }\r\n        }).catch((error)=>{\r\n           console.log(error);\r\n        })\r\n      \r\n      }\r\n    \r\n        \r\n        \r\n\r\n\r\n\r\n\r\n\r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n               <Container maxwidth=\"xs\" fixed>\r\n           \r\n           <AppBar position=\"static\">\r\n             <Tabs value={this.state.value}\r\n              onChange={this.handleChange} \r\n              indicatorColor=\"#000000\"\r\n              textColor = \"#000000\"\r\n              variant=\"scrollable\"\r\n              scrollButtons=\"auto\"\r\n              aria-label=\"simple tabs example\"\r\n              >\r\n               \r\n            {this.props.categories ?\r\n               this.props.categories.map((category)=>(\r\n                   <Tab icon={<CategoryTab icon={category.icon} \r\n                   title={category.categoryName} />} \r\n                   onclick={e=>{\r\n                       if(this.props.categoryPages[category.categoryName.toUpperCase()]){\r\n                         this.setState({\r\n                             Page: category.categoryName.toUpperCase(),\r\n                         })\r\n                       }else{\r\n                           this.setState({loading:true})\r\n                         this.props.loadPage(category.categoryName.toUpperCase(),\r\n                         ()=>{\r\n                             this.setState({loading: false,\r\n                                 Page:category.categoryName.toUpperCase(),});\r\n         \r\n                          },\r\n                          ()=>{\r\n                             this.setState({loading: false});\r\n                          })\r\n                       }\r\n\r\n                           \r\n                   }}\r\n                   />\r\n\r\n\r\n               ))\r\n               :null}  \r\n             </Tabs>\r\n           </AppBar>\r\n<>\r\n                   <br />\r\n                   <br />\r\n                   </>\r\n           {this.props.categoryPages ?\r\n           this.props.categoryPages[this.state.Page].map((item,index)=>{\r\n               switch(item.view_type){\r\n                   case 0:\r\n                       let banners =[];\r\n                       for(let index =1;index < item.no_of_banners +1; index++){\r\n                           const banner=item[\"banner_\"+ index];\r\n                           const background=item[\"banner\"+index+\"_background\"];\r\n                           banners.push({banner,background});\r\n                          }\r\n                          return <BannerSlider Images={banners} />;\r\n                         \r\n                          case 1:\r\n                            <>\r\n                              <br />\r\n                              <br />\r\n                              <br />\r\n                              </>\r\n\r\n                              return( <StripAdView \r\n                              image={item.strip_ad_banner}\r\n                              background={item.background} />\r\n                              );\r\n\r\n                          case 2: \r\n                          <>\r\n                              <br />\r\n                              <br />\r\n                              <br />\r\n                              </>\r\n\r\n                          let products=[];\r\n                                 for(let index =1;index < item.no_of_products +1; index++){\r\n                                   let data={\r\n                                   image : item['product_image_'+index],\r\n                                   title : item['product_title_'+index],\r\n                                   description :item['product_description_'+index],\r\n                                   price : item['product_price_'+index]\r\n                                   }\r\n                                   products.push(data);\r\n                                   }\r\n                                 return <HorizontalScroller products={products} title={item.layout_title} background={item.layout_background} />\r\n                             \r\n                             \r\n                       \r\n                        }\r\n                        \r\n           }):null}\r\n\r\n\r\n\r\n    \r\n         <Fab color=\"primary\" aria-label=\"add\"\r\n         onClick={(e)=>this.setState({addDialog:true})}\r\n         style={{position:\"fixed\", bottom: \"50px\",right: \"50px\"}}>\r\n             <AddIcon />\r\n         </Fab>\r\n           </Container>\r\n         \r\n\r\n         <Dialog fullScreen open={this.state.addDialog} onClose={e=>this.setState({\r\n        addDialog: false\r\n    })} \r\n    TransitionComponent={Transition}>\r\n        <AppBar>\r\n         <Toolbar>\r\n         <IconButton edge=\"start\" color=\"inherit\" onClick={e=>this.setState({\r\n             addDialog: false\r\n         })} aria-label=\"close\">\r\n          <Close />\r\n       </IconButton>\r\n          <Typography variant=\"h6\">\r\n      Add Section\r\n        </Typography>\r\n        <Button autoFocus color=\"inherit\"\r\n        style={{position: \"absolute\", right: 0}}\r\n         onClick={(e)=>\r\n         this.save()}>\r\n      save\r\n        </Button>\r\n    </Toolbar>\r\n    </AppBar>\r\n\r\n    <Toolbar />\r\n    \r\n   \r\n    <FormControl  >\r\n        <InputLabel id=\"demo-simple-select-label\">View Type</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          defaultValue={0}\r\n         onChange={e=>{\r\n          console.log(this.state.images);\r\n           this.onFieldChange(e)\r\n          this.setState({\r\n            colors:[],\r\n            images:[],\r\n            selectedProducts:[],\r\n          })\r\n          }}\r\n         name=\"view_type\"\r\n        >\r\n          <MenuItem value={0}>Banner Slider</MenuItem>\r\n          <MenuItem value={1}>Horizontal Scroller</MenuItem>\r\n          <MenuItem value={2}>Strip Ad View</MenuItem>\r\n        </Select>\r\n        <br/>\r\n\r\n        <TextField\r\n          label=\"Position\"\r\n          id=\"outlined-size-small\"\r\n          variant=\"outlined\"\r\n          type=\"number\"\r\n          size=\"small\"\r\n          error={this.state.positionError!== \"\"}\r\n          helperText={this.state.positionError}\r\n          onChange={this.onFieldChange}\r\n          name=\"position\"\r\n          margin=\"dense\"\r\n        />\r\n        </FormControl>\r\n        <br />\r\n        \r\n        <Box display=\"flex\" flexWrap=\"true\"> \r\n        {this.state.images.map((item,index)=><Box margin=\"14px\" >\r\n            <img \r\n            src={URL.createObjectURL(item)} \r\n            style={{height: \"90px\", \r\n            width: this.state.viewtype===0\r\n            ? \"160px\":this.state.viewtype===1?\"210px\"\r\n            :0, objectFit:\"scale-down\",\r\n             backgroundColor:this.state.colors[index] }} />\r\n            <br />\r\n            <input \r\n            id={\"contained-button\"+index} \r\n            type=\"color\" \r\n            defaultValue=\"#000000\" hidden \r\n            onChange={e=>{\r\n                let colors = this.state.colors\r\n                colors[index] =e.target.value\r\n                this.setState({\r\n                    colors\r\n                })\r\n            }} \r\n            defaultValue=\"#000000\"\r\n            />\r\n             <IconButton\r\n              arial-label=\"delete\"\r\n               onClick={e=>this.removeImage(index)} >\r\n                 <Delete />\r\n             </IconButton>\r\n            <label htmlFor={\"contained-button\"+index}>\r\n       \r\n          <IconButton\r\n          color=\"primary\"\r\n          arial-lebel=\"upload picture\"\r\n          component=\"span\"\r\n          >\r\n\r\n          </IconButton>\r\n      </label>\r\n\r\n        </Box>\r\n        )}\r\n        </Box>\r\n\r\n        <input\r\n        accept=\"image/*\"\r\n        id=\"contained-button-file\"\r\n        \r\n        onChange={e=>{\r\n            if(e.target.files && e.target.files[0]) {\r\n               let images=this.state.images;\r\n               images.push(e.target.files[0])\r\n               this.state.colors.push(\"#ffffff\")\r\n               this.setState({\r\n                   images,\r\n               })\r\n               e.target.value = null;\r\n            }\r\n        }\r\n    }\r\n       \r\n        hidden\r\n        type=\"file\"\r\n        name=\"images\"\r\n      />\r\n\r\n{this.state.viewtype===0 && this.state.images.length < 2 ? (\r\n     \r\n    \r\n     <label htmlFor=\"contained-button-file\">\r\n       <Button\r\n        variant=\"contained\" \r\n        color=\"primary\"\r\n         component=\"span\">\r\n         Add Image\r\n       </Button>\r\n     </label>\r\n     ):null} \r\n\r\n   {this.state.viewtype===1 && this.state.images.length < 1 ? (\r\n    \r\n   \r\n    <label htmlFor=\"contained-button-file\">\r\n      <Button \r\n      variant=\"contained\"\r\n       color=\"primary\" \r\n       component=\"span\">\r\n        Add Image\r\n      </Button>\r\n    </label>\r\n    ):null}\r\n\r\n\r\n{(this.state.viewtype === 2  || this.state.viewtype ===3)}\r\n     \r\n\r\n     <div>\r\n     <Box style={{backgroundColor: this.state.layout_bg}}>\r\n       <TextField\r\n       id=\"filled-basic\"\r\n       label=\"Title\"\r\n       style={{width: \"100%\" }}\r\n       error={this.state.positionError!== \"\"}\r\n       helperText={this.state.layout_titleError}\r\n       name=\"layout_title\"\r\n       variant=\"standard\"\r\n\r\n       />\r\n\r\n\r\n     <input \r\n     type=\"text\"\r\n      placeholder=\"title\"\r\n       name=\"title\" \r\n       onChnag={this.onFieldChange} />\r\n\r\n     </Box>\r\n\r\n     <input id={\"contained-button-title\"} type=\"color\" defaultValue=\"#000000\" hidden \r\n            onChange={this.onFieldChange}\r\n            name=\"layout_bg\"\r\n            defaultValue=\"#ffffff\"\r\n             />\r\n     <label htmlFor={\"contained-button-title\"}>\r\n       \r\n       <Button\r\n       color=\"primary\"\r\n       arial-lebel=\"upload picture\"\r\n       component=\"span\"\r\n       >\r\n         Layout Background\r\n        </Button>\r\n   </label>\r\n   {/* <h4>Selected Product: {this.state.selecteProducts.length}</h4> */}\r\n   <Box display=\"flex\">\r\n        <TextField \r\n        name=\"search\" \r\n        style={{flexGrow: 1}}\r\n        onChange={this.onFieldChange}\r\n        label=\"search\"\r\n        variant=\"outlined\" \r\n         size=\"small\" />\r\n\r\n   <Button \r\n   variant=\"contained\" \r\n   color=\"primary\" \r\n   onClick={e=>this.searchProducts()}>\r\n     Search\r\n     </Button>\r\n   \r\n   </Box>\r\n   {this.state.searching ? (\r\n     <Box display=\"flex\" \r\n     justifyContent=\"center\"\r\n      bgColor=\"primary\">\r\n   <CircularProgress  /> \r\n   </Box>\r\n   ):(\r\n   \r\n   <Box display=\"flex\" flexWrap=\"true\" bgcolor=\"#00000010\">\r\n     {this.state.productlist===undefined \r\n     ? this.loadLatestProducts()\r\n     : this.state.productlist.map((item,index)=>(\r\n\r\n     <FormControlLabel\r\n     control={<Checkbox  \r\n     onChange={e=>{\r\n       if(e.target.checked){\r\n         this.state.selectedProducts.push(item.id)\r\n\r\n       }else{\r\n         let posi = this.state.selectedProducts.indexOf(item.id)\r\n         this.state.selectedProducts.splice(posi,1);\r\n       }\r\n       this.setState({});\r\n     }}\r\n     />}\r\n     label={<ProductView item={item} /> }\r\n     labelPlacement=\"bottom\"\r\n \r\n     /> \r\n        ))}\r\n\r\n   </Box>\r\n\r\n    )}\r\n    </div>\r\n     </Dialog> \r\n     {/* <Backdrop style={{ zIndex: 1200} } open={this.state.loading}>\r\n    <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        <Snackbar \r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n\r\n        open={this.state.snackbar!==\"\"}\r\n        autoHideDuration={6000}\r\n        onClose={e=>this.setState({\r\n          loading: false,\r\n          snackbar: \"\"\r\n        })}\r\n        // onClose={handleClose}\r\n        message={this.state.snackbar}\r\n       \r\n        />  */}\r\n\r\n     \r\n       \r\n           \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const CategoryTab=({icon,title})=>{\r\n    return <Box>\r\n        <Avatar alt=\"Remy Sharp\" \r\n        variant=\"square\" \r\n        src={icon} />\r\n        <Typography variant=\"body2\">{title}</Typography>\r\n    </Box>\r\n }\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        categories: state.categories,\r\n        categoryPages: state.loadPage\r\n    }\r\n }\r\n\r\n const mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        loadCategories:()=>dispatch(loadCategories()),\r\n        loadPage:(category)=>dispatch(loadCategoryPage(category))\r\n       \r\n      \r\n    }\r\n\r\n }\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeFragment);\r\n\r\n\r\n\r\n\r\n\r\n","import firestore from \"../Firebase\";\r\n\r\n\r\n\r\nexport const loadCategories = () => {\r\n    return dispatch =>{\r\n    \r\n        firestore\r\n        .collection(\"Categories\").orderBy('index')\r\n        .get() \r\n        .then((querySnapshot) =>{\r\n\r\n               if(!querySnapshot.empty) {\r\n                   let categories = [];\r\n                   querySnapshot.forEach((doc) =>{\r\n                       categories.push( doc.data());\r\n                       \r\n                   })\r\n\r\n                   dispatch({type: \"LOAD_CATEGORIES\", payload:categories});\r\n                   \r\n               }\r\n\r\n            }\r\n        ).catch((error)=>{\r\n            console.log(error);\r\n           \r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const addCategories = (data) => {\r\n    return dispatch =>{\r\n\r\n        firestore\r\n        .collection(\"Categories\")\r\n        .doc(data.categoryName.toUpperCase())\r\n        .set(data)\r\n        .then(function (doc){\r\n\r\n            dispatch({type: \"ADD_CATEGORY\", payload:data});\r\n                   \r\n\r\n            }\r\n        ).catch((error)=>{\r\n          console.log(error)\r\n          \r\n        })\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const updateCategories = (data) => {\r\n    return dispatch =>{\r\n\r\n        firestore\r\n        .collection(\"Categories\")\r\n        .doc(data.categoryName.toUpperCase())\r\n        .update(data)\r\n        .then(function (doc){\r\n\r\n            dispatch({type: \"UPDATE_CATEORY\", payload:data});\r\n                   \r\n\r\n            }\r\n        ).catch((error)=>{\r\n          console.log(error)\r\n          \r\n        })\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const deleteCategories = (categoryName) => {\r\n    return dispatch =>{\r\n\r\n        firestore\r\n        .collection(\"Categories\")\r\n        .doc(categoryName.toUpperCase())\r\n        .delete()\r\n        .then(function (doc){\r\n\r\n            dispatch({type: \"DELETE_CATEGORY\", payload:categoryName});\r\n            dispatch({type: \"DELETE_PAGE\",payload:categoryName})       \r\n\r\n            }\r\n        ).catch((error)=>{\r\n          console.log(error)\r\n          \r\n        })\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import firestore from \"../Firebase\";\r\n\r\n\r\nexport const loadCategoryPage = (category) => {\r\n    return (dispatch , getState)=>{\r\n    \r\n        firestore\r\n        .collection(\"Categories\")\r\n        .doc(category)\r\n        .collection('TOP_DEALS').orderBy('index')\r\n        .get()\r\n        .then((querySnapshot) =>{\r\n \r\n               if(!querySnapshot.empty) {\r\n                   let pagedata = [];\r\n                   querySnapshot.forEach((doc) =>{\r\n                       pagedata.push( doc.data());\r\n                   })\r\n                   dispatch({type: \"LOAD_PAGE\",payload:pagedata,category});\r\n                  \r\n                }\r\n               \r\n\r\n            }\r\n        ).catch((error)=>{\r\n            console.log(error);\r\n          \r\n        })\r\n\r\n    }\r\n}\r\n\r\n","import MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { forwardRef } from 'react';\r\nimport React, { Component } from 'react'; \r\nimport { connect } from \"react-redux\";\r\nimport { addCategories, deleteCategories, loadCategories, updateCategories } from \"../Actions/loadCategories\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport firestore, { storageRef } from \"../Firebase\";\r\n\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n \r\n\r\nexport class TableFragment extends Component {\r\n  constructor(props) {\r\n    super(props) \r\n  \r\n    this.state = {\r\n       category: [],\r\n       columns:[ \r\n        { title: 'Index', field: 'index', type:'numeric' },\r\n\r\n        { title: 'Icon', field: 'icon',  editComponent: (props) => (\r\n          <>\r\n          <input\r\n        accept=\"image/*\"\r\n        id=\"contained-button-file\"\r\n        \r\n        onChange={e=>{\r\n          if(e.target.files && e.target.files[0]) {\r\n           \r\n             this.setState({\r\n                 image: e.target.files[0],\r\n             })\r\n             props.onChange(e.target.value);\r\n             e.target.value = null;\r\n          }\r\n      }\r\n  }\r\n        hidden\r\n        type=\"file\"\r\n        name=\"images\"\r\n      />\r\n      <label htmlFor=\"contained-button-file\">\r\n        {this.state.image || props.value ? (\r\n           <img src={this.state.image ? this.renderImageUrl(this.state.image) : props.value  } style={{width: 40,height: 40}}  />\r\n        ):(\r\n        <Button\r\n         variant=\"contained\" \r\n         color=\"primary\"\r\n          component=\"span\">\r\n          Add Image\r\n        </Button>\r\n        )}\r\n      </label>\r\n      </>\r\n        ),  render: rowData => <img src={rowData.icon} style={{width: 40,height: 40}}/>  },\r\n        { title: 'Category', field: 'categoryName', \r\n        editable: \"onAdd\",\r\n        // editComponent: (props) => props.value ? (props.value) : (\r\n          \r\n        //   <TextField\r\n        //   label=\"categoryName\"\r\n        //   variant=\"outlined\"\r\n        //   size=\"small\"\r\n        //   name=\"name\"\r\n        //   onChange={e=>{props.value = e.target.value;\r\n        //   }}\r\n        // />\r\n          \r\n        // ), \r\n      },\r\n       \r\n       \r\n      ],\r\n    \r\n    //  data: props.categories,\r\n    \r\n       \r\n    }\r\n  }\r\n\r\n\r\n  handleChange = (event, newValue) => {\r\n    this.setState({\r\n        value:newValue,\r\n    })\r\n  };\r\n\r\n  onFieldChange = e=>{\r\n    this.setState({\r\n        [e.tatget.name] : e.target.value,\r\n    })\r\n}\r\n\r\n  renderImageUrl = (item) =>{\r\n    try{\r\n      return URL.createObjectURL(item);\r\n    } catch(error){\r\n      return item;\r\n    }\r\n    \r\n  }\r\n\r\n  uploadImage = (onCompleted) =>{\r\n   \r\n    let file = this.state.image;\r\n\r\n    try{\r\n      if(file.startsWith(\"https\")){\r\n        // url.push(file);\r\n        onCompleted(file);\r\n      }\r\n    }catch(error){\r\n      var ts= String(new Date().getTime()),\r\n      i=0,\r\n      out='';\r\n      for(i=0;i<ts.length;i+=2){\r\n        out += Number(ts.substr(i,2)).toString(36);\r\n      }\r\n    }\r\n\r\n   \r\n     \r\n      let filename = 'category' + out;\r\n    \r\n\r\n    var uploadTask = storageRef.child('categories/'+filename+'.jpg').put(file);\r\n\r\n    // Register three observers:\r\n    // 1. 'state_changed' observer, called any time the state changes\r\n    // 2. Error observer, called on failure\r\n    // 3. Completion observer, called on successful completion\r\n    uploadTask.on('state_changed', function(snapshot){\r\n      // Observe state change events such as progress, pause, and resume\r\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n      var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n      console.log('Upload is ' + progress + '% done');\r\n     {/* switch (snapshot.state) {\r\n        case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n          console.log('Upload is paused');\r\n          break;\r\n        case firebase.storage.TaskState.RUNNING: // or 'running'\r\n          console.log('Upload is running');\r\n          break;\r\n      } */}\r\n    }, function(error) {\r\n      // Handle unsuccessful uploads\r\n    }, function() {\r\n      \r\n      // Handle successful uploads on complete\r\n      // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n      uploadTask.snapshot.ref.getDownloadURL().then((downloadURL)=>{\r\n        // url.push(downloadURL);\r\n      \r\n          onCompleted(downloadURL);\r\n        \r\n      });\r\n    });\r\n  };\r\n\r\n  deleteImage = (image,index,onComplete) =>{\r\n   \r\n\r\n    let splited_link = image[index].split(\"/\");\r\n    let name = splited_link[splited_link.length -1]\r\n    .split(\"?\")[0]\r\n    .replace(\"banners%2F\", \"\");\r\n\r\n    storageRef\r\n    .child(\"categories/\" + name)\r\n    .delete()\r\n    .then(()=>{\r\n     \r\n        onComplete();\r\n      \r\n    }).catch((error)=>{\r\n       onComplete(false);\r\n    })\r\n  }\r\n    \r\n \r\n  render() {\r\n   \r\n    return (\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Editable Preview\"\r\n        columns={this.state.columns}\r\n         data={this.props.categories}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              // setTimeout(() => {\r\n              //   resolve();\r\n              //   this.setState([...this.data, newData]);\r\n                \r\n               \r\n              // }, 1000)\r\n              if(newData.index && newData.categoryName && newData.icon){\r\n                this.uploadImage(url=>{\r\n                  newData['icon'] = url;\r\n                  this.props.addCategory(newData,()=>resolve(),\r\n                  (error)=>resolve())\r\n                 \r\n          \r\n                })\r\n              }else{\r\n              resolve();\r\n              this.setState({\r\n                image: null,\r\n              })\r\n              }\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              // setTimeout(() => {\r\n              //   const dataUpdate = [this.data];\r\n              //   const index = oldData.tableData.id;\r\n              //   dataUpdate[index] = newData;\r\n              //   this.setData([dataUpdate]);\r\n  \r\n              //   resolve();\r\n              // }, 1000)\r\n             // console.log(newdata, oldData);\r\n              if(newData.index === oldData.index &&\r\n                newData.icon === oldData.icon ) {\r\n                resolve();\r\n                this.setState({\r\n                  image: null,\r\n                });\r\n              }else if(newData.icon === oldData.icon){\r\n               \r\n                \r\n                  this.props.updateCategory(newData,()=>resolve(),\r\n                  (error)=>resolve());\r\n                 \r\n          \r\n                \r\n              }else{\r\n                this.deleteImage(oldData.icon,(success)=>{\r\n\r\n                  if(success){\r\n                    this.uploadImage(url=>{\r\n                      newData['icon'] = url;\r\n                      this.props.updateCategory(newData,()=>resolve(),\r\n                      (error)=>resolve())\r\n                     \r\n              \r\n                    })\r\n                  }else{\r\n                    resolve();\r\n                  }\r\n                })\r\n              }\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              // setTimeout(() => {\r\n              //   const dataDelete = [...this.data];\r\n              //   const index = oldData.tableData.id;\r\n              //   dataDelete.splice(index, 1);\r\n              //   this.setData([...dataDelete]);\r\n                \r\n              //   resolve()\r\n              // }, 1000)\r\n              this.props.deleteCategory(oldData.categoryName,\r\n                ()=> resolve(),\r\n                (error)=>resolve()\r\n\r\n              )\r\n            }),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n      categories: state.categories,\r\n     \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    addCategory: (data) => dispatch(addCategories(data)),\r\n    updateCategory: (data) => dispatch(updateCategories(data)),\r\n    deleteCategory: (name) => dispatch(deleteCategories(name)),\r\n  }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableFragment);","import React from 'react';\r\n//import './ChatFragment.css';\r\n\r\nfunction ContactFragment() {\r\n    return (\r\n        <div>\r\n            <h1>Contact Fragment</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactFragment\r\n","import React from 'react';\r\nimport './SidebarChat.css';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction SidebarChat({name}) {\r\n\r\n    \r\n    return (\r\n        <div className=\"sidebarChat\">\r\n            <Avatar />\r\n            <div className=\"sidebarChat_info\">\r\n\r\n           \r\n                <h2>{name}</h2>\r\n                <p>This is last Message</p>\r\n         \r\n\r\n               \r\n               \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Sidebar.css';\r\nimport DonutLargeRoundedIcon from '@material-ui/icons/DonutLargeRounded';\r\nimport { IconButton, Avatar } from '@material-ui/core';\r\nimport MoreVertRoundedIcon from '@material-ui/icons/MoreVertRounded';\r\nimport ChatRoundedIcon from '@material-ui/icons/ChatRounded';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport SidebarChat from './SidebarChat'; \r\n\r\nfunction Sidebar() { \r\n   // const [input, setinput] = useState(\"\");\r\n    const [room, setroom] = useState([]);\r\n\r\n    const addRoom = () => {\r\n        const roomName = prompt(\"Enter a Room Name\");\r\n        setroom(roomName);\r\n      \r\n    }\r\n\r\n   \r\n   \r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n                <Avatar src=\"https://upload.wikimedia.org/wikipedia/commons/5/52/Background_images.png\"\r\n                 />\r\n                <div className=\"sidebar_headerRight\">\r\n                    <IconButton>\r\n                    <DonutLargeRoundedIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                    <MoreVertRoundedIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                    <ChatRoundedIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n                    <SearchRoundedIcon onClick={addRoom} />\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar_chats\">\r\n               {room.map((index)=>(\r\n                   <SidebarChat name={room} />\r\n               ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useState } from 'react';\r\nimport './Chat.css';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport AttachmentRoundedIcon from '@material-ui/icons/AttachmentRounded';\r\nimport MoreVertRoundedIcon from '@material-ui/icons/MoreVertRounded';\r\nimport InsertEmoticonRoundedIcon from '@material-ui/icons/InsertEmoticonRounded';\r\nimport MicRoundedIcon from '@material-ui/icons/MicRounded';\r\n\r\n\r\nfunction Chat({messages}) {\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const sendMessage= async (e)=>{\r\n        e.preventDefault();\r\n\r\n        setInput(\"\");\r\n\r\n    }\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat_header\">\r\n                <Avatar />\r\n\r\n                <div className=\"chat_headerInfo\">\r\n                    <h3>Room name</h3>\r\n                    <p>Last Seen at...</p>\r\n                </div>\r\n\r\n                <div className=\"chat_headerRight\">\r\n                    <IconButton>\r\n                        <SearchRoundedIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachmentRoundedIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertRoundedIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat_body\">\r\n                {messages.map((message)=>(\r\n\r\n               \r\n                <p className={`chat_message ${message.received && \"chat_receiver\"}`}>\r\n                    <span className=\"chat_name\">{message.name}</span>\r\n                    {message.message}\r\n\r\n                    <span className=\"chat_timestamp\">\r\n                       {message.timestamp} \r\n\r\n                    </span>\r\n                    \r\n                    </p>\r\n                     ))}\r\n\r\n                   \r\n            </div>\r\n            <div className=\"chat_footer\">\r\n                <InsertEmoticonRoundedIcon />\r\n                <form>\r\n                    <input value={input} onChange={(e)=> setInput(e.target.value)}\r\n                     placeholder=\"Type a message\" type=\"text\" />\r\n                    <button onClick={sendMessage} type=\"submit\">\r\n                        Send a message\r\n                    </button>\r\n                </form>\r\n                <MicRoundedIcon />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react';\r\nimport './ChatFragment.css';\r\nimport Sidebar from './Sidebar';\r\nimport Chat from './Chat';\r\nimport { Container } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\nfunction App(){\r\n  \r\n   return (  \r\n     \r\n   <div className=\"apk\">\r\n      <div className=\"apk_body\">\r\n     \r\n   \r\n      <Sidebar />\r\n      <Chat messages={[{name:\"ayush\", received: \"5am\", message: \"yo guys\", timestamp: \"6 AM\"}]}  />\r\n      \r\n      </div>  \r\n   </div>\r\n  \r\n   \r\n)\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React,{ useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeFragment from '../Fragments/HomeFragment';\r\nimport TableFragment from '../Table/TableFragment';\r\nimport ContactFragment from '../Fragments/ContactFragment';\r\nimport ChatFragment from '../Whatsapp/ChatFragment';\r\nimport {Home , Category, Phonelink, ShoppingCart, Settings, PowerOff} from '@material-ui/icons';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [fragment, setfragment] = useState(\"Home\");\r\n\r\n  const loadFragment =  () =>{\r\n    switch(fragment){\r\n      case \"Home\":\r\n      return <HomeFragment />\r\n        case \"WhatsApp\":\r\n        return <ChatFragment />\r\n       case \"TableFragment\":\r\n         return <TableFragment />\r\n      case \"ContactFragment\":\r\n        return <ContactFragment />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            BIGMART\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n        <List>\r\n       \r\n       <ListItem button onClick={e=>setfragment(\"Home\")}>\r\n         <ListItemIcon>{<Home />}</ListItemIcon>\r\n         <ListItemText primary=\"Home\" />\r\n       </ListItem>\r\n\r\n       <ListItem button onClick={e=>setfragment(\"WhatsApp\")}>\r\n         <ListItemIcon>{<Category />}</ListItemIcon>\r\n         <ListItemText primary=\"WhatsApp\" />\r\n       </ListItem>\r\n\r\n       <ListItem button onClick={e=>setfragment(\"TableFragment\")}>\r\n         <ListItemIcon>{<Phonelink />}</ListItemIcon>\r\n         <ListItemText primary=\"Manage Categories\" />\r\n       </ListItem>\r\n\r\n       <ListItem button onClick={e=>setfragment(\"ContactFragment\")}>\r\n         <ListItemIcon>{<Settings />}</ListItemIcon>\r\n         <ListItemText primary=\"Settings\" />\r\n       </ListItem>\r\n\r\n       <ListItem button>\r\n         <ListItemIcon>{<PowerOff />}</ListItemIcon>\r\n         <ListItemText primary=\"Log Out\" />\r\n       </ListItem>\r\n   \r\n   </List>\r\n        </div>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Toolbar />\r\n        {loadFragment()}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\n// import Sidebar from './Sidebar';\n// import Chat from './Chat';\n// import HomeContainer from './HomeContainer';\nimport Dashboard from './Pages/Dashboard';\n\n\nfunction App(){\n  \n   return (  \n   <div className=\"app\">\n      <div className=\"app_body\">\n     \n     <Dashboard />\n      {/* <Sidebar />\n      <Chat messages={[{name:\"ayush\", received: \"5am\", message: \"yo guys\", timestamp: \"6 AM\"}]}  />\n       */}\n      </div>  \n   </div>\n   \n)\n\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initstate = null;\r\n\r\nconst categoryPageReducer = (state = initstate,action) =>{\r\n    console.log(action.type);\r\n    switch(action.type){\r\n        case \"LOAD_PAGE\":\r\n            state = {...state, [action.category]: action.payload};\r\n            break;\r\n        case \"DELETE_PAGE\":\r\n           let newState = state;\r\n            if(newState[action.payload]){\r\n                delete newState[action.payload];\r\n            }\r\n            state = newState;\r\n            default:\r\n                break;\r\n\r\n    } \r\n    return state;\r\n}\r\n\r\nexport default categoryPageReducer;","const initstate = null;\r\n\r\n\r\nconst categoryReducer = (state = initstate,action) =>{\r\n    console.log(action.type);\r\n    console.log(action.payload);\r\n    switch(action.type){\r\n        case \"LOAD_CATEGORIES\":\r\n            state = action.payload;\r\n            break;\r\n            case \"ADD_CATEGORY\":\r\n                state = [...state, action.payload];\r\n                break;\r\n                case \"UPDATE_CATEGORY\":\r\n                    let list = [...state];\r\n                 let index = state.indexOf(\r\n                     list.filter(\r\n                         (item)=> item.categoryName === action.payload.categoryName\r\n                     )[0]\r\n                 );\r\n                 state[index] = action.payload;\r\n                  state = list;\r\n                    break;\r\n            case \"DELETE_CATEGORY\":\r\n               let list1 = [...state];\r\n                let index1 = state.indexOf(\r\n                    list1.filter(\r\n                        (item)=> item.categoryName === action.payload\r\n                    )[0]\r\n                );\r\n               list1.splice(index1,1);\r\n                 state = list1;\r\n                 break;\r\n            default:\r\n                break;\r\n\r\n    } \r\n    return state;\r\n}\r\n\r\nexport default categoryReducer;\r\n","import { combineReducers } from 'redux';\r\nimport categoryPageReducer from './categoryPageReducer';\r\nimport categoryReducer from './categoryReducer';\r\n\r\n\r\n\r\nconst DEFAULT_REDUCER =(initstate, action) =>{\r\n    return{\r\n        key: \"HELLO WORLD\",\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    DEFAULT: DEFAULT_REDUCER,\r\n    categories: categoryReducer,\r\n    loadPage: categoryPageReducer\r\n   \r\n\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore,applyMiddleware, compose } from 'redux';\nimport rootReducer from './Reducers/rootReducer';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n const store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n  ));\n\n\nReactDOM.render(\n <Provider store={store}>\n    <App />,\n</Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}